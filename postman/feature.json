{
	"info": {
		"_postman_id": "405468f2-2935-404c-a1b1-ac61cef59443",
		"name": "Locations",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29223649"
	},
	"item": [
		{
			"name": "Добавление новой локации с заголовком длиной менее 3 символов",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {\r",
							"    pm.response.to.be.badRequest;    \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"До\",\r\n    \"description\": \"Настоящий из красного кирпича.\",\r\n    \"lat\": 59,\r\n    \"lon\": 48\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/admin/locations",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"admin",
						"locations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление новой локации с заголовком длиной более 120 символов",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {\r",
							"    pm.response.to.be.badRequest;    \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"Доооооооооооооооооооооооооооооооооооооомммммммммммммммммммммммммммммммммммиииииииииииииииииииииииииииииииииииииииииикккккккккккккккккккк\",\r\n    \"description\": \"Настоящий из красного кирпича.\",\r\n    \"lat\": 59,\r\n    \"lon\": 48\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/admin/locations",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"admin",
						"locations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление новой локации с описанием длиной менее 20 символов",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {\r",
							"    pm.response.to.be.badRequest;    \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"Домик\",\r\n    \"description\": \"Настоящий\",\r\n    \"lat\": 59,\r\n    \"lon\": 48\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/admin/locations",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"admin",
						"locations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление новой локации с пустым полем lat",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {\r",
							"    pm.response.to.be.badRequest;    \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"Домик\",\r\n    \"description\": \"Настоящий из красного кирпича.\",\r\n    \"lon\": 48\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/admin/locations",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"admin",
						"locations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление новой локации с lat < -90",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {\r",
							"    pm.response.to.be.badRequest;    \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"Домик\",\r\n    \"description\": \"Настоящий из красного кирпича.\",\r\n    \"lat\": -100,\r\n    \"lon\": 48\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/admin/locations",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"admin",
						"locations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление новой локации с lat > 90",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {\r",
							"    pm.response.to.be.badRequest;    \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"Домик\",\r\n    \"description\": \"Настоящий из красного кирпича.\",\r\n    \"lat\": 91,\r\n    \"lon\": 48\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/admin/locations",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"admin",
						"locations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление новой локации с пустым полем lon",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {\r",
							"    pm.response.to.be.badRequest;    \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"Домик\",\r\n    \"description\": \"Настоящий из красного кирпича.\",\r\n    \"lat\": 59\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/admin/locations",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"admin",
						"locations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление новой локации с lon < -180",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {\r",
							"    pm.response.to.be.badRequest;    \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"Домик\",\r\n    \"description\": \"Настоящий из красного кирпича.\",\r\n    \"lat\": 59,\r\n    \"lon\": -181.5\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/admin/locations",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"admin",
						"locations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление новой локации с lon > 180",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {\r",
							"    pm.response.to.be.badRequest;    \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"Домик\",\r\n    \"description\":  \"Настоящий из красного кирпича.\",\r\n    \"lat\": 59,\r\n    \"lon\": 181\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/admin/locations",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"admin",
						"locations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление новой локации админом",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.withBody; \r",
							"    pm.response.to.be.json; \r",
							"});\r",
							"\r",
							"const source = JSON.parse(pm.request.body.raw);\r",
							"const target = pm.response.json();\r",
							"pm.collectionVariables.set('myLocId1', target.id);\r",
							"\r",
							"pm.test(\"Локация должна содержать поля: id, title, description, lat, lon\", function () {\r",
							"pm.expect(target).to.have.property('id');\r",
							"pm.expect(target).to.have.property('title');\r",
							"pm.expect(target).to.have.property('description');\r",
							"pm.expect(target).to.have.property('lat');\r",
							"pm.expect(target).to.have.property('lon');\r",
							"});\r",
							"\r",
							"pm.test(\"Данные в ответе должны соответствовать данным в запросе\", function () {\r",
							"    pm.expect(target.id).to.not.be.null;\r",
							"    pm.expect(source.title).equal(target.title, 'Заголовок локации должен совпадать с отправленным');\r",
							"    pm.expect(source.description).equal(target.description, 'Описание локации должно совпадать с отправленным');\r",
							"    pm.expect(target.lat.toString()).equal(source.lat.toString(), 'Широта локации проведения события должна соответствовать широте локации проведения события в запросе');\r",
							"    pm.expect(target.lon.toString()).equal(source.lon.toString(), 'Долгота локации проведения события должна соответствовать долготе локации проведения события в запросе');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"Домик\",\r\n    \"description\": \"Настоящий из красного кирпича.\",\r\n    \"lat\": 60,\r\n    \"lon\": 48\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/admin/locations",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"admin",
						"locations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление новой локации без заголовка",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.withBody; \r",
							"    pm.response.to.be.json; \r",
							"});\r",
							"\r",
							"const source = JSON.parse(pm.request.body.raw);\r",
							"const target = pm.response.json();\r",
							"pm.collectionVariables.set('myLocId2', target.id);\r",
							"\r",
							"pm.test(\"Локация должна содержать поля: id, title, description, lat, lon\", function () {\r",
							"pm.expect(target).to.have.property('id');\r",
							"pm.expect(target).to.have.property('title');\r",
							"pm.expect(target).to.have.property('description');\r",
							"pm.expect(target).to.have.property('lat');\r",
							"pm.expect(target).to.have.property('lon');\r",
							"});\r",
							"\r",
							"pm.test(\"Данные в ответе должны соответствовать данным в запросе\", function () {\r",
							"    pm.expect(target.id).to.not.be.null;\r",
							"    pm.expect(target.title).to.be.null;\r",
							"    pm.expect(source.description).equal(target.description, 'Описание локации должно совпадать с отправленным');\r",
							"    pm.expect(target.lat.toString()).equal(source.lat.toString(), 'Широта локации проведения события должна соответствовать широте локации проведения события в запросе');\r",
							"    pm.expect(target.lon.toString()).equal(source.lon.toString(), 'Долгота локации проведения события должна соответствовать долготе локации проведения события в запросе');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"description\": \"Настоящий из красного кирпича.\",\r\n    \"lat\": 59,\r\n    \"lon\": 48\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/admin/locations",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"admin",
						"locations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение локации по её ID",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.withBody; \r",
							"    pm.response.to.be.json; \r",
							"});\r",
							"\r",
							"const target = pm.response.json();\r",
							"\r",
							"pm.test(\"Локация должна содержать поля: id, title, description, lat, lon\", function () {\r",
							"pm.expect(target).to.have.property('id');\r",
							"pm.expect(target).to.have.property('title');\r",
							"pm.expect(target).to.have.property('description');\r",
							"pm.expect(target).to.have.property('lat');\r",
							"pm.expect(target).to.have.property('lon');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/locations/:locId",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"locations",
						":locId"
					],
					"variable": [
						{
							"key": "locId",
							"value": "{{myLocId1}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление новой локации c дублирующими координатами",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.withBody; \r",
							"    pm.response.to.be.json; \r",
							"});\r",
							"\r",
							"const source = JSON.parse(pm.request.body.raw);\r",
							"const target = pm.response.json();\r",
							"\r",
							"pm.test(\"Локация должна содержать поля: id, title, description, lat, lon\", function () {\r",
							"pm.expect(target).to.have.property('id');\r",
							"pm.expect(target).to.have.property('title');\r",
							"pm.expect(target).to.have.property('description');\r",
							"pm.expect(target).to.have.property('lat');\r",
							"pm.expect(target).to.have.property('lon');\r",
							"});\r",
							"\r",
							"pm.test(\"Данные в ответе должны соответствовать данным в запросе\", function () {\r",
							"    pm.expect(target.id).to.not.be.null;\r",
							"    pm.expect(target.lat.toString()).equal(source.lat.toString(), 'Широта локации проведения события должна соответствовать широте локации проведения события в запросе');\r",
							"    pm.expect(target.lon.toString()).equal(source.lon.toString(), 'Долгота локации проведения события должна соответствовать долготе локации проведения события в запросе');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"lat\": 60,\r\n    \"lon\": 48\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/admin/locations",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"admin",
						"locations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Обновление локации при несуществующем ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 404 и данные в формате json\", function () {\r",
							"    pm.response.to.be.notFound;    \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"Домик\",\r\n    \"description\":  \"Настоящий из красного кирпича.\",\r\n    \"lat\": 59,\r\n    \"lon\": 181\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/admin/locations/5000",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"admin",
						"locations",
						"5000"
					]
				}
			},
			"response": []
		},
		{
			"name": "Обновление локации при ID <0",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {\r",
							"    pm.response.to.be.badRequest;    \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"Домик\",\r\n    \"description\":  \"Настоящий из красного кирпича.\",\r\n    \"lat\": 59,\r\n    \"lon\": 181\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/admin/locations/-5",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"admin",
						"locations",
						"-5"
					]
				}
			},
			"response": []
		},
		{
			"name": "Изменение локации админом (только заголовок)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Ответ должен содержать код статуса 200 и данные в формате json', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"})\r",
							"\r",
							"const source = JSON.parse(pm.request.body.raw);\r",
							"const target = pm.response.json();\r",
							"\r",
							"pm.test('Локация должна содержать поля: id, title, description, lat, lon', function () {\r",
							"    pm.expect(target).to.have.property('id');\r",
							"    pm.expect(target).to.have.property('title');\r",
							"    pm.expect(target).to.have.property('description');\r",
							"    pm.expect(target).to.have.property('lat');\r",
							"    pm.expect(target).to.have.property('lon');\r",
							"})\r",
							"\r",
							"pm.test(\"Данные в ответе должны соответствовать данным в запросе\", function () {\r",
							"    pm.expect(target.id).to.not.be.null;\r",
							"    pm.expect(source.title).to.eql(target.title, 'Заголовок локации должен совпадать с отправленным');\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"Бунгало\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/admin/locations/:locId",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"admin",
						"locations",
						":locId"
					],
					"variable": [
						{
							"key": "locId",
							"value": "{{myLocId2}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Изменение локации админом (широта)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.withBody; \r",
							"    pm.response.to.be.json; \r",
							"});\r",
							"\r",
							"const source = JSON.parse(pm.request.body.raw);\r",
							"const target = pm.response.json();\r",
							"\r",
							"pm.test(\"Локация должна содержать поля: id, title, description, lat, lon\", function () {\r",
							"pm.expect(target).to.have.property('id');\r",
							"pm.expect(target).to.have.property('title');\r",
							"pm.expect(target).to.have.property('description');\r",
							"pm.expect(target).to.have.property('lat');\r",
							"pm.expect(target).to.have.property('lon');\r",
							"});\r",
							"\r",
							"pm.test(\"Данные в ответе должны соответствовать данным в запросе\", function () {\r",
							"    pm.expect(source.title).equal(target.title, 'Заголовок локации должен совпадать с отправленным');\r",
							"    pm.expect(source.description).equal(target.description, 'Описание локации должно совпадать с отправленным');\r",
							"    pm.expect(target.lat.toString()).equal(source.lat.toString(), 'Широта локации проведения события должна соответствовать широте локации проведения события в запросе');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"Бунгало\",\r\n    \"description\": \"На берегу моря Лаптевых.\",\r\n    \"lat\": 71\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{BASE_URL}}/admin/locations/:locId",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"admin",
						"locations",
						":locId"
					],
					"variable": [
						{
							"key": "locId",
							"value": "{{myLocId2}}",
							"description": "ID локации"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Удаление локации при несуществующем ID",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 404 и данные в формате json\", function () {\r",
							"    pm.response.to.be.notFound;    \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/admin/locations/5000",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"admin",
						"locations",
						"5000"
					]
				},
				"description": "Обратите внимание: с категорий не должно быть связано ни одного события."
			},
			"response": []
		},
		{
			"name": "Удаление локации",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/admin/locations/:locId",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"admin",
						"locations",
						":locId"
					],
					"variable": [
						{
							"key": "locId",
							"value": "{{myLocId1}}"
						}
					]
				},
				"description": "Обратите внимание: с категорий не должно быть связано ни одного события."
			},
			"response": []
		},
		{
			"name": "Повторное удаление локации",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Категория не должна быть найдена после удаления. Ответ должен содержать код статуса 404 и данные в формате json\", function () {\r",
							"    pm.response.to.be.notFound;    \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/admin/locations/:locId",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"admin",
						"locations",
						":locId"
					],
					"variable": [
						{
							"key": "locId",
							"value": "{{myLocId1}}"
						}
					]
				},
				"description": "Обратите внимание: с категорий не должно быть связано ни одного события."
			},
			"response": []
		},
		{
			"name": "Получение всех локаций",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
							"    pm.response.to.be.ok;    \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"const target = pm.response.json();\r",
							"\r",
							"pm.test(\"Локации должны содержать поля: id, title, description, lat, lon\", function () {\r",
							"    pm.expect(target[0]).to.have.all.keys('id', 'title', 'description', 'lat', 'lon');\r",
							"    pm.expect(target[1]).to.have.all.keys('id', 'title', 'description', 'lat', 'lon');\r",
							"});\r",
							"\r",
							"pm.test(\"В теле ответа должна соблюдаться сортировка по возрастанию ID\", function(){\r",
							"    pm.expect(target[1].id).to.be.above(target[0].id);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/locations?from=0&size=1000",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"locations"
					],
					"query": [
						{
							"key": "from",
							"value": "0"
						},
						{
							"key": "size",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение событий в указанной локации",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
							"    pm.response.to.be.ok;    \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"const target = pm.response.json();\r",
							"                \r",
							"pm.test(\"Локации должны содержать поля: annotation, category, confirmedRequests, eventDate, id, initiator, paid, title, views\", function () {\r",
							"    pm.expect(target[0]).to.have.all.keys('annotation', 'category', 'confirmedRequests', 'eventDate', 'id', 'initiator', 'paid', 'title', 'views');\r",
							"    pm.expect(target[1]).to.have.all.keys('annotation', 'category', 'confirmedRequests', 'eventDate', 'id', 'initiator', 'paid', 'title', 'views');\r",
							"});\r",
							"\r",
							"pm.test(\"В теле ответа должна соблюдаться сортировка по возрастанию ID\", function(){\r",
							"    pm.expect(target[1].id).to.be.above(target[0].id);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{BASE_URL}}/locations/events?from&size=1000&lat={{myLat}}&lon={{myLon}}&radius=10000",
					"host": [
						"{{BASE_URL}}"
					],
					"path": [
						"locations",
						"events"
					],
					"query": [
						{
							"key": "from",
							"value": null
						},
						{
							"key": "size",
							"value": "1000"
						},
						{
							"key": "lat",
							"value": "{{myLat}}"
						},
						{
							"key": "lon",
							"value": "{{myLon}}"
						},
						{
							"key": "radius",
							"value": "10000"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "BASE_URL",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "myLocId1",
			"value": "",
			"type": "string"
		},
		{
			"key": "myLocId2",
			"value": "",
			"type": "string"
		},
		{
			"key": "myLat",
			"value": "",
			"type": "string"
		},
		{
			"key": "myLon",
			"value": "",
			"type": "string"
		}
	]
}